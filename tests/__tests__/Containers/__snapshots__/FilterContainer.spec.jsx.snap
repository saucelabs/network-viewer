// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterContainer renders without crashing 1`] = `
<NetworkProvider
  autoHighlightChange={false}
  data={null}
  fetchOptions={
    Object {
      "withCredentials": true,
    }
  }
  file={null}
  initialState={
    Immutable.Map {
      "errorFilter": false,
      "search": Object {
        "name": "url",
        "value": "",
      },
      "error": null,
      "scrollToIndex": null,
      "data": Immutable.List [],
      "selectedReqIndex": null,
      "reqDetail": null,
      "showReqDetail": false,
      "totalNetworkTime": null,
      "actualData": Immutable.List [],
      "filter": Object {
        "name": null,
        "value": null,
      },
      "dataSummary": Immutable.Map {},
      "loading": false,
      "sort": Object {
        "isAcs": true,
        "key": "startedDateTime",
      },
    }
  }
  onDataError={null}
  onDataLoaded={null}
  scrollRequestPosition="near"
  scrollTimeStamp={null}
>
  <FilterContainer>
    <section>
      <div>
        <Search
          name="url"
          value=""
        >
          <input
            onChange={[Function]}
            placeholder="Search by full URL"
            type="text"
            value=""
          />
        </Search>
      </div>
      <div>
        <Button
          className="filter-button selected-filter"
          disabled={false}
          href={null}
          key="All"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button selected-filter"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            All
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="XHR"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            XHR
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="JS"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            JS
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="CSS"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            CSS
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="Img"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            Img
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="Media"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            Media
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="Font"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            Font
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="Doc"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            Doc
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="WS"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            WS
          </button>
        </Button>
        <Button
          className="filter-button"
          disabled={false}
          href={null}
          key="Manifest"
          onClick={[Function]}
          size="sm"
          type="button"
          variant="default"
        >
          <button
            className="btn filter-button"
            disabled={false}
            href={null}
            onClick={[Function]}
            size="sm"
            type="button"
          >
            Manifest
          </button>
        </Button>
        <ErrorFilter
          isError={false}
          onChange={[Function]}
        >
          <Checkbox
            containerClassName=""
            isChecked={false}
            onChange={[Function]}
            title="error"
          >
            <div
              className="checkbox-container"
            >
              <label
                title="error"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                Errors Only
              </label>
            </div>
          </Checkbox>
        </ErrorFilter>
        <ImportHar
          className={null}
          showButton={true}
        >
          <div
            onBlur={[Function]}
            onClick={[Function]}
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDrop={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
          >
            <input
              accept=".har"
              autoComplete="off"
              multiple={false}
              onChange={[Function]}
              onClick={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              tabIndex={-1}
              type="file"
            />
            <Button
              className={null}
              disabled={false}
              href={null}
              type="button"
              variant="default"
            >
              <button
                className="btn"
                disabled={false}
                href={null}
                type="button"
              >
                Import HAR
              </button>
            </Button>
          </div>
        </ImportHar>
        <Reset
          className=""
          onReset={[Function]}
        >
          <Button
            className=""
            disabled={false}
            href={null}
            onClick={[Function]}
            type="button"
            variant="default"
          >
            <button
              className="btn"
              disabled={false}
              href={null}
              onClick={[Function]}
              type="button"
            >
              Reset
            </button>
          </Button>
        </Reset>
      </div>
    </section>
  </FilterContainer>
</NetworkProvider>
`;
